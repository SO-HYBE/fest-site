{"ast":null,"code":"import _slicedToArray from\"D:/Sohaib's Files/fest-site/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{FaArrowCircleUp}from'react-icons/fa';import{Button}from'./Styles';import{jsx as _jsx}from\"react/jsx-runtime\";var ScrollButton=function ScrollButton(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var toggleVisible=function toggleVisible(){var scrolled=document.documentElement.scrollTop;if(scrolled>300){setVisible(true);}else if(scrolled<=300){setVisible(false);}};var scrollToTop=function scrollToTop(){window.scrollTo({top:0,behavior:'smooth'/* you can also use 'auto' behaviour\r\n         in place of 'smooth' */});};window.addEventListener('scroll',toggleVisible);return/*#__PURE__*/_jsx(Button,{children:/*#__PURE__*/_jsx(FaArrowCircleUp,{onClick:scrollToTop,style:{display:visible?'inline':'none'}})});};export default ScrollButton;","map":{"version":3,"names":["React","useState","FaArrowCircleUp","Button","ScrollButton","visible","setVisible","toggleVisible","scrolled","document","documentElement","scrollTop","scrollToTop","window","scrollTo","top","behavior","addEventListener","display"],"sources":["D:/Sohaib's Files/fest-site/src/components/ScrollButton.js"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport {FaArrowCircleUp} from 'react-icons/fa';\r\nimport { Button } from './Styles';\r\n  \r\nconst ScrollButton = () =>{\r\n  \r\n  const [visible, setVisible] = useState(false)\r\n  \r\n  const toggleVisible = () => {\r\n    const scrolled = document.documentElement.scrollTop;\r\n    if (scrolled > 300){\r\n      setVisible(true)\r\n    } \r\n    else if (scrolled <= 300){\r\n      setVisible(false)\r\n    }\r\n  };\r\n  \r\n  const scrollToTop = () =>{\r\n    window.scrollTo({\r\n      top: 0, \r\n      behavior: 'smooth'\r\n      /* you can also use 'auto' behaviour\r\n         in place of 'smooth' */\r\n    });\r\n  };\r\n  \r\n  window.addEventListener('scroll', toggleVisible);\r\n  \r\n  return (\r\n    <Button>\r\n     <FaArrowCircleUp onClick={scrollToTop} \r\n     style={{display: visible ? 'inline' : 'none'}} />\r\n    </Button>\r\n  );\r\n}\r\n  \r\nexport default ScrollButton;"],"mappings":"iHACA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,OAAQC,eAAe,KAAO,gBAAgB,CAC9C,OAASC,MAAM,KAAQ,UAAU,CAAC,2CAElC,GAAMC,aAAY,CAAG,QAAfA,aAAY,EAAQ,CAExB,cAA8BH,QAAQ,CAAC,KAAK,CAAC,wCAAtCI,OAAO,eAAEC,UAAU,eAE1B,GAAMC,cAAa,CAAG,QAAhBA,cAAa,EAAS,CAC1B,GAAMC,SAAQ,CAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,CACnD,GAAIH,QAAQ,CAAG,GAAG,CAAC,CACjBF,UAAU,CAAC,IAAI,CAAC,CAClB,CAAC,IACI,IAAIE,QAAQ,EAAI,GAAG,CAAC,CACvBF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,GAAMM,YAAW,CAAG,QAAdA,YAAW,EAAQ,CACvBC,MAAM,CAACC,QAAQ,CAAC,CACdC,GAAG,CAAE,CAAC,CACNC,QAAQ,CAAE,QACV;AACN,gCACI,CAAC,CAAC,CACJ,CAAC,CAEDH,MAAM,CAACI,gBAAgB,CAAC,QAAQ,CAAEV,aAAa,CAAC,CAEhD,mBACE,KAAC,MAAM,wBACN,KAAC,eAAe,EAAC,OAAO,CAAEK,WAAY,CACtC,KAAK,CAAE,CAACM,OAAO,CAAEb,OAAO,CAAG,QAAQ,CAAG,MAAM,CAAE,EAAG,EACzC,CAEb,CAAC,CAED,cAAeD,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}